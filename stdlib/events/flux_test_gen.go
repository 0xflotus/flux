// DO NOT EDIT: This file is autogenerated via the builtin command.

package events

import (
	ast "github.com/influxdata/flux/ast"
	parser "github.com/influxdata/flux/internal/parser"
)

var FluxTestPackages = []*ast.Package{&ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 3,
					Line:   37,
				},
				File:   "state_changes_test.flux",
				Source: "package events_test\n\n\nimport \"testing\"\nimport \"experimental/array\"\nimport \"events\"\n\ndata = array.from(\n    rows: [\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:01Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:02Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 11},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ],\n)\nwant = array.from(\n    rows: [\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ],\n)\n\ntest stateChanges = () => ({\n    input: data |> testing.load(),\n    want: want,\n    fn: (tables=<-) => tables\n        |> events.stateChanges()\n        |> drop(columns: [\"_start\", \"_stop\"]),\n})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   20,
					},
					File:   "state_changes_test.flux",
					Source: "data = array.from(\n    rows: [\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:01Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:02Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 11},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ],\n)",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   8,
						},
						File:   "state_changes_test.flux",
						Source: "data",
						Start: ast.Position{
							Column: 1,
							Line:   8,
						},
					},
				},
				Name: "data",
			},
			Init: &ast.CallExpression{
				Arguments: []ast.Expression{&ast.ObjectExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 6,
								Line:   19,
							},
							File:   "state_changes_test.flux",
							Source: "rows: [\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:01Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:02Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 11},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ]",
							Start: ast.Position{
								Column: 5,
								Line:   9,
							},
						},
					},
					Properties: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   19,
								},
								File:   "state_changes_test.flux",
								Source: "rows: [\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:01Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:02Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 11},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ]",
								Start: ast.Position{
									Column: 5,
									Line:   9,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   9,
									},
									File:   "state_changes_test.flux",
									Source: "rows",
									Start: ast.Position{
										Column: 5,
										Line:   9,
									},
								},
							},
							Name: "rows",
						},
						Value: &ast.ArrayExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   19,
									},
									File:   "state_changes_test.flux",
									Source: "[\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:01Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:02Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 11},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ]",
									Start: ast.Position{
										Column: 11,
										Line:   9,
									},
								},
							},
							Elements: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   10,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10}",
										Start: ast.Position{
											Column: 9,
											Line:   10,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   10,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:00Z",
											Start: ast.Position{
												Column: 10,
												Line:   10,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   10,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   10,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   10,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:00Z",
												Start: ast.Position{
													Column: 17,
													Line:   10,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:00Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   10,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   10,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   10,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   10,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   10,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   10,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   10,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   10,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   10,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   10,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   10,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   10,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   10,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"x\"",
											Start: ast.Position{
												Column: 76,
												Line:   10,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   10,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   10,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   10,
												},
												File:   "state_changes_test.flux",
												Source: "\"x\"",
												Start: ast.Position{
													Column: 83,
													Line:   10,
												},
											},
										},
										Value: "x",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   10,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 10",
											Start: ast.Position{
												Column: 88,
												Line:   10,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   10,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   10,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   10,
												},
												File:   "state_changes_test.flux",
												Source: "10",
												Start: ast.Position{
													Column: 96,
													Line:   10,
												},
											},
										},
										Value: int64(10),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   11,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:01Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10}",
										Start: ast.Position{
											Column: 9,
											Line:   11,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   11,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:01Z",
											Start: ast.Position{
												Column: 10,
												Line:   11,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   11,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   11,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   11,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:01Z",
												Start: ast.Position{
													Column: 17,
													Line:   11,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:01Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   11,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   11,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   11,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   11,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   11,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   11,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   11,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   11,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   11,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   11,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   11,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   11,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   11,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"x\"",
											Start: ast.Position{
												Column: 76,
												Line:   11,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   11,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   11,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   11,
												},
												File:   "state_changes_test.flux",
												Source: "\"x\"",
												Start: ast.Position{
													Column: 83,
													Line:   11,
												},
											},
										},
										Value: "x",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   11,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 10",
											Start: ast.Position{
												Column: 88,
												Line:   11,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   11,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   11,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   11,
												},
												File:   "state_changes_test.flux",
												Source: "10",
												Start: ast.Position{
													Column: 96,
													Line:   11,
												},
											},
										},
										Value: int64(10),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   12,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:02Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 11}",
										Start: ast.Position{
											Column: 9,
											Line:   12,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   12,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:02Z",
											Start: ast.Position{
												Column: 10,
												Line:   12,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   12,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   12,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   12,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:02Z",
												Start: ast.Position{
													Column: 17,
													Line:   12,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:02Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   12,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   12,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   12,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   12,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   12,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   12,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   12,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   12,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   12,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   12,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   12,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   12,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   12,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"x\"",
											Start: ast.Position{
												Column: 76,
												Line:   12,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   12,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   12,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   12,
												},
												File:   "state_changes_test.flux",
												Source: "\"x\"",
												Start: ast.Position{
													Column: 83,
													Line:   12,
												},
											},
										},
										Value: "x",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   12,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 11",
											Start: ast.Position{
												Column: 88,
												Line:   12,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   12,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   12,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   12,
												},
												File:   "state_changes_test.flux",
												Source: "11",
												Start: ast.Position{
													Column: 96,
													Line:   12,
												},
											},
										},
										Value: int64(11),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   13,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12}",
										Start: ast.Position{
											Column: 9,
											Line:   13,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   13,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:03Z",
											Start: ast.Position{
												Column: 10,
												Line:   13,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   13,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   13,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   13,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:03Z",
												Start: ast.Position{
													Column: 17,
													Line:   13,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:03Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   13,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   13,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   13,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   13,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   13,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   13,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   13,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   13,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   13,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   13,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   13,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   13,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   13,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"y\"",
											Start: ast.Position{
												Column: 76,
												Line:   13,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   13,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   13,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   13,
												},
												File:   "state_changes_test.flux",
												Source: "\"y\"",
												Start: ast.Position{
													Column: 83,
													Line:   13,
												},
											},
										},
										Value: "y",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   13,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 12",
											Start: ast.Position{
												Column: 88,
												Line:   13,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   13,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   13,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   13,
												},
												File:   "state_changes_test.flux",
												Source: "12",
												Start: ast.Position{
													Column: 96,
													Line:   13,
												},
											},
										},
										Value: int64(12),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   14,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13}",
										Start: ast.Position{
											Column: 9,
											Line:   14,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   14,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:04Z",
											Start: ast.Position{
												Column: 10,
												Line:   14,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   14,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   14,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   14,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:04Z",
												Start: ast.Position{
													Column: 17,
													Line:   14,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:04Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   14,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   14,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   14,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   14,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   14,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   14,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   14,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   14,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   14,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   14,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   14,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   14,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   14,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"y\"",
											Start: ast.Position{
												Column: 76,
												Line:   14,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   14,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   14,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   14,
												},
												File:   "state_changes_test.flux",
												Source: "\"y\"",
												Start: ast.Position{
													Column: 83,
													Line:   14,
												},
											},
										},
										Value: "y",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   14,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 13",
											Start: ast.Position{
												Column: 88,
												Line:   14,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   14,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   14,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   14,
												},
												File:   "state_changes_test.flux",
												Source: "13",
												Start: ast.Position{
													Column: 96,
													Line:   14,
												},
											},
										},
										Value: int64(13),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   15,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13}",
										Start: ast.Position{
											Column: 9,
											Line:   15,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   15,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:04Z",
											Start: ast.Position{
												Column: 10,
												Line:   15,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   15,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   15,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   15,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:04Z",
												Start: ast.Position{
													Column: 17,
													Line:   15,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:04Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   15,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   15,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   15,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   15,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   15,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   15,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   15,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   15,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   15,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   15,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   15,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   15,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   15,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"y\"",
											Start: ast.Position{
												Column: 76,
												Line:   15,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   15,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   15,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   15,
												},
												File:   "state_changes_test.flux",
												Source: "\"y\"",
												Start: ast.Position{
													Column: 83,
													Line:   15,
												},
											},
										},
										Value: "y",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   15,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 13",
											Start: ast.Position{
												Column: 88,
												Line:   15,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   15,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   15,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   15,
												},
												File:   "state_changes_test.flux",
												Source: "13",
												Start: ast.Position{
													Column: 96,
													Line:   15,
												},
											},
										},
										Value: int64(13),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   16,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14}",
										Start: ast.Position{
											Column: 9,
											Line:   16,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   16,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:05Z",
											Start: ast.Position{
												Column: 10,
												Line:   16,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   16,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   16,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   16,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:05Z",
												Start: ast.Position{
													Column: 17,
													Line:   16,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:05Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   16,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   16,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   16,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   16,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   16,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   16,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   16,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   16,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   16,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   16,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   16,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   16,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   16,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"z\"",
											Start: ast.Position{
												Column: 76,
												Line:   16,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   16,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   16,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   16,
												},
												File:   "state_changes_test.flux",
												Source: "\"z\"",
												Start: ast.Position{
													Column: 83,
													Line:   16,
												},
											},
										},
										Value: "z",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   16,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 14",
											Start: ast.Position{
												Column: 88,
												Line:   16,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   16,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   16,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   16,
												},
												File:   "state_changes_test.flux",
												Source: "14",
												Start: ast.Position{
													Column: 96,
													Line:   16,
												},
											},
										},
										Value: int64(14),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   17,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15}",
										Start: ast.Position{
											Column: 9,
											Line:   17,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   17,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:06Z",
											Start: ast.Position{
												Column: 10,
												Line:   17,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   17,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   17,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   17,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:06Z",
												Start: ast.Position{
													Column: 17,
													Line:   17,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:06Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   17,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   17,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   17,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   17,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   17,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   17,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   17,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   17,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   17,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   17,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   17,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   17,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   17,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"x\"",
											Start: ast.Position{
												Column: 76,
												Line:   17,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   17,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   17,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   17,
												},
												File:   "state_changes_test.flux",
												Source: "\"x\"",
												Start: ast.Position{
													Column: 83,
													Line:   17,
												},
											},
										},
										Value: "x",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   17,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 15",
											Start: ast.Position{
												Column: 88,
												Line:   17,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   17,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   17,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   17,
												},
												File:   "state_changes_test.flux",
												Source: "15",
												Start: ast.Position{
													Column: 96,
													Line:   17,
												},
											},
										},
										Value: int64(15),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   18,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16}",
										Start: ast.Position{
											Column: 9,
											Line:   18,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   18,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:07Z",
											Start: ast.Position{
												Column: 10,
												Line:   18,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   18,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   18,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   18,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:07Z",
												Start: ast.Position{
													Column: 17,
													Line:   18,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:07Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   18,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   18,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   18,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   18,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   18,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   18,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   18,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   18,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   18,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   18,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   18,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   18,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   18,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"z\"",
											Start: ast.Position{
												Column: 76,
												Line:   18,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   18,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   18,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   18,
												},
												File:   "state_changes_test.flux",
												Source: "\"z\"",
												Start: ast.Position{
													Column: 83,
													Line:   18,
												},
											},
										},
										Value: "z",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   18,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 16",
											Start: ast.Position{
												Column: 88,
												Line:   18,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   18,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   18,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   18,
												},
												File:   "state_changes_test.flux",
												Source: "16",
												Start: ast.Position{
													Column: 96,
													Line:   18,
												},
											},
										},
										Value: int64(16),
									},
								}},
								With: nil,
							}},
						},
					}},
					With: nil,
				}},
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   20,
						},
						File:   "state_changes_test.flux",
						Source: "array.from(\n    rows: [\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:01Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:02Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 11},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:04Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 13},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ],\n)",
						Start: ast.Position{
							Column: 8,
							Line:   8,
						},
					},
				},
				Callee: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   8,
							},
							File:   "state_changes_test.flux",
							Source: "array.from",
							Start: ast.Position{
								Column: 8,
								Line:   8,
							},
						},
					},
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   8,
								},
								File:   "state_changes_test.flux",
								Source: "array",
								Start: ast.Position{
									Column: 8,
									Line:   8,
								},
							},
						},
						Name: "array",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   8,
								},
								File:   "state_changes_test.flux",
								Source: "from",
								Start: ast.Position{
									Column: 14,
									Line:   8,
								},
							},
						},
						Name: "from",
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   29,
					},
					File:   "state_changes_test.flux",
					Source: "want = array.from(\n    rows: [\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ],\n)",
					Start: ast.Position{
						Column: 1,
						Line:   21,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   21,
						},
						File:   "state_changes_test.flux",
						Source: "want",
						Start: ast.Position{
							Column: 1,
							Line:   21,
						},
					},
				},
				Name: "want",
			},
			Init: &ast.CallExpression{
				Arguments: []ast.Expression{&ast.ObjectExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 6,
								Line:   28,
							},
							File:   "state_changes_test.flux",
							Source: "rows: [\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ]",
							Start: ast.Position{
								Column: 5,
								Line:   22,
							},
						},
					},
					Properties: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   28,
								},
								File:   "state_changes_test.flux",
								Source: "rows: [\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ]",
								Start: ast.Position{
									Column: 5,
									Line:   22,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   22,
									},
									File:   "state_changes_test.flux",
									Source: "rows",
									Start: ast.Position{
										Column: 5,
										Line:   22,
									},
								},
							},
							Name: "rows",
						},
						Value: &ast.ArrayExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   28,
									},
									File:   "state_changes_test.flux",
									Source: "[\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ]",
									Start: ast.Position{
										Column: 11,
										Line:   22,
									},
								},
							},
							Elements: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   23,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10}",
										Start: ast.Position{
											Column: 9,
											Line:   23,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   23,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:00Z",
											Start: ast.Position{
												Column: 10,
												Line:   23,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   23,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   23,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   23,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:00Z",
												Start: ast.Position{
													Column: 17,
													Line:   23,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:00Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   23,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   23,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   23,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   23,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   23,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   23,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   23,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   23,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   23,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   23,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   23,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   23,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   23,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"x\"",
											Start: ast.Position{
												Column: 76,
												Line:   23,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   23,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   23,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   23,
												},
												File:   "state_changes_test.flux",
												Source: "\"x\"",
												Start: ast.Position{
													Column: 83,
													Line:   23,
												},
											},
										},
										Value: "x",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   23,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 10",
											Start: ast.Position{
												Column: 88,
												Line:   23,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   23,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   23,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   23,
												},
												File:   "state_changes_test.flux",
												Source: "10",
												Start: ast.Position{
													Column: 96,
													Line:   23,
												},
											},
										},
										Value: int64(10),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   24,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12}",
										Start: ast.Position{
											Column: 9,
											Line:   24,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   24,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:03Z",
											Start: ast.Position{
												Column: 10,
												Line:   24,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   24,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   24,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   24,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:03Z",
												Start: ast.Position{
													Column: 17,
													Line:   24,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:03Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   24,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   24,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   24,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   24,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   24,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   24,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   24,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   24,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   24,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   24,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   24,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   24,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   24,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"y\"",
											Start: ast.Position{
												Column: 76,
												Line:   24,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   24,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   24,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   24,
												},
												File:   "state_changes_test.flux",
												Source: "\"y\"",
												Start: ast.Position{
													Column: 83,
													Line:   24,
												},
											},
										},
										Value: "y",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   24,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 12",
											Start: ast.Position{
												Column: 88,
												Line:   24,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   24,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   24,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   24,
												},
												File:   "state_changes_test.flux",
												Source: "12",
												Start: ast.Position{
													Column: 96,
													Line:   24,
												},
											},
										},
										Value: int64(12),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   25,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14}",
										Start: ast.Position{
											Column: 9,
											Line:   25,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   25,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:05Z",
											Start: ast.Position{
												Column: 10,
												Line:   25,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   25,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   25,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   25,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:05Z",
												Start: ast.Position{
													Column: 17,
													Line:   25,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:05Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   25,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   25,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   25,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   25,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   25,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   25,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   25,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   25,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   25,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   25,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   25,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   25,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   25,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"z\"",
											Start: ast.Position{
												Column: 76,
												Line:   25,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   25,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   25,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   25,
												},
												File:   "state_changes_test.flux",
												Source: "\"z\"",
												Start: ast.Position{
													Column: 83,
													Line:   25,
												},
											},
										},
										Value: "z",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   25,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 14",
											Start: ast.Position{
												Column: 88,
												Line:   25,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   25,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   25,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   25,
												},
												File:   "state_changes_test.flux",
												Source: "14",
												Start: ast.Position{
													Column: 96,
													Line:   25,
												},
											},
										},
										Value: int64(14),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   26,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15}",
										Start: ast.Position{
											Column: 9,
											Line:   26,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   26,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:06Z",
											Start: ast.Position{
												Column: 10,
												Line:   26,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   26,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   26,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   26,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:06Z",
												Start: ast.Position{
													Column: 17,
													Line:   26,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:06Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   26,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   26,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   26,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   26,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   26,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   26,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   26,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   26,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   26,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   26,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   26,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   26,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   26,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"x\"",
											Start: ast.Position{
												Column: 76,
												Line:   26,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   26,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   26,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   26,
												},
												File:   "state_changes_test.flux",
												Source: "\"x\"",
												Start: ast.Position{
													Column: 83,
													Line:   26,
												},
											},
										},
										Value: "x",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   26,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 15",
											Start: ast.Position{
												Column: 88,
												Line:   26,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   26,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   26,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   26,
												},
												File:   "state_changes_test.flux",
												Source: "15",
												Start: ast.Position{
													Column: 96,
													Line:   26,
												},
											},
										},
										Value: int64(15),
									},
								}},
								With: nil,
							}, &ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 99,
											Line:   27,
										},
										File:   "state_changes_test.flux",
										Source: "{_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16}",
										Start: ast.Position{
											Column: 9,
											Line:   27,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 37,
												Line:   27,
											},
											File:   "state_changes_test.flux",
											Source: "_time: 2020-10-01T00:00:07Z",
											Start: ast.Position{
												Column: 10,
												Line:   27,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 15,
													Line:   27,
												},
												File:   "state_changes_test.flux",
												Source: "_time",
												Start: ast.Position{
													Column: 10,
													Line:   27,
												},
											},
										},
										Name: "_time",
									},
									Value: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 37,
													Line:   27,
												},
												File:   "state_changes_test.flux",
												Source: "2020-10-01T00:00:07Z",
												Start: ast.Position{
													Column: 17,
													Line:   27,
												},
											},
										},
										Value: parser.MustParseTime("2020-10-01T00:00:07Z"),
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   27,
											},
											File:   "state_changes_test.flux",
											Source: "_measurement: \"foo\"",
											Start: ast.Position{
												Column: 39,
												Line:   27,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 51,
													Line:   27,
												},
												File:   "state_changes_test.flux",
												Source: "_measurement",
												Start: ast.Position{
													Column: 39,
													Line:   27,
												},
											},
										},
										Name: "_measurement",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 58,
													Line:   27,
												},
												File:   "state_changes_test.flux",
												Source: "\"foo\"",
												Start: ast.Position{
													Column: 53,
													Line:   27,
												},
											},
										},
										Value: "foo",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 74,
												Line:   27,
											},
											File:   "state_changes_test.flux",
											Source: "_field: \"temp\"",
											Start: ast.Position{
												Column: 60,
												Line:   27,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 66,
													Line:   27,
												},
												File:   "state_changes_test.flux",
												Source: "_field",
												Start: ast.Position{
													Column: 60,
													Line:   27,
												},
											},
										},
										Name: "_field",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 74,
													Line:   27,
												},
												File:   "state_changes_test.flux",
												Source: "\"temp\"",
												Start: ast.Position{
													Column: 68,
													Line:   27,
												},
											},
										},
										Value: "temp",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 86,
												Line:   27,
											},
											File:   "state_changes_test.flux",
											Source: "state: \"z\"",
											Start: ast.Position{
												Column: 76,
												Line:   27,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 81,
													Line:   27,
												},
												File:   "state_changes_test.flux",
												Source: "state",
												Start: ast.Position{
													Column: 76,
													Line:   27,
												},
											},
										},
										Name: "state",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 86,
													Line:   27,
												},
												File:   "state_changes_test.flux",
												Source: "\"z\"",
												Start: ast.Position{
													Column: 83,
													Line:   27,
												},
											},
										},
										Value: "z",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 98,
												Line:   27,
											},
											File:   "state_changes_test.flux",
											Source: "_value: 16",
											Start: ast.Position{
												Column: 88,
												Line:   27,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 94,
													Line:   27,
												},
												File:   "state_changes_test.flux",
												Source: "_value",
												Start: ast.Position{
													Column: 88,
													Line:   27,
												},
											},
										},
										Name: "_value",
									},
									Value: &ast.IntegerLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 98,
													Line:   27,
												},
												File:   "state_changes_test.flux",
												Source: "16",
												Start: ast.Position{
													Column: 96,
													Line:   27,
												},
											},
										},
										Value: int64(16),
									},
								}},
								With: nil,
							}},
						},
					}},
					With: nil,
				}},
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   29,
						},
						File:   "state_changes_test.flux",
						Source: "array.from(\n    rows: [\n        {_time: 2020-10-01T00:00:00Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 10},\n        {_time: 2020-10-01T00:00:03Z, _measurement: \"foo\", _field: \"temp\", state: \"y\", _value: 12},\n        {_time: 2020-10-01T00:00:05Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 14},\n        {_time: 2020-10-01T00:00:06Z, _measurement: \"foo\", _field: \"temp\", state: \"x\", _value: 15},\n        {_time: 2020-10-01T00:00:07Z, _measurement: \"foo\", _field: \"temp\", state: \"z\", _value: 16},\n    ],\n)",
						Start: ast.Position{
							Column: 8,
							Line:   21,
						},
					},
				},
				Callee: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   21,
							},
							File:   "state_changes_test.flux",
							Source: "array.from",
							Start: ast.Position{
								Column: 8,
								Line:   21,
							},
						},
					},
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   21,
								},
								File:   "state_changes_test.flux",
								Source: "array",
								Start: ast.Position{
									Column: 8,
									Line:   21,
								},
							},
						},
						Name: "array",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 18,
									Line:   21,
								},
								File:   "state_changes_test.flux",
								Source: "from",
								Start: ast.Position{
									Column: 14,
									Line:   21,
								},
							},
						},
						Name: "from",
					},
				},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 3,
							Line:   37,
						},
						File:   "state_changes_test.flux",
						Source: "stateChanges = () => ({\n    input: data |> testing.load(),\n    want: want,\n    fn: (tables=<-) => tables\n        |> events.stateChanges()\n        |> drop(columns: [\"_start\", \"_stop\"]),\n})",
						Start: ast.Position{
							Column: 6,
							Line:   31,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   31,
							},
							File:   "state_changes_test.flux",
							Source: "stateChanges",
							Start: ast.Position{
								Column: 6,
								Line:   31,
							},
						},
					},
					Name: "stateChanges",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 3,
								Line:   37,
							},
							File:   "state_changes_test.flux",
							Source: "() => ({\n    input: data |> testing.load(),\n    want: want,\n    fn: (tables=<-) => tables\n        |> events.stateChanges()\n        |> drop(columns: [\"_start\", \"_stop\"]),\n})",
							Start: ast.Position{
								Column: 21,
								Line:   31,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 3,
									Line:   37,
								},
								File:   "state_changes_test.flux",
								Source: "({\n    input: data |> testing.load(),\n    want: want,\n    fn: (tables=<-) => tables\n        |> events.stateChanges()\n        |> drop(columns: [\"_start\", \"_stop\"]),\n})",
								Start: ast.Position{
									Column: 27,
									Line:   31,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 2,
										Line:   37,
									},
									File:   "state_changes_test.flux",
									Source: "{\n    input: data |> testing.load(),\n    want: want,\n    fn: (tables=<-) => tables\n        |> events.stateChanges()\n        |> drop(columns: [\"_start\", \"_stop\"]),\n}",
									Start: ast.Position{
										Column: 28,
										Line:   31,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 34,
											Line:   32,
										},
										File:   "state_changes_test.flux",
										Source: "input: data |> testing.load()",
										Start: ast.Position{
											Column: 5,
											Line:   32,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 10,
												Line:   32,
											},
											File:   "state_changes_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 5,
												Line:   32,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.PipeExpression{
									Argument: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 16,
													Line:   32,
												},
												File:   "state_changes_test.flux",
												Source: "data",
												Start: ast.Position{
													Column: 12,
													Line:   32,
												},
											},
										},
										Name: "data",
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 34,
												Line:   32,
											},
											File:   "state_changes_test.flux",
											Source: "data |> testing.load()",
											Start: ast.Position{
												Column: 12,
												Line:   32,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: nil,
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 34,
													Line:   32,
												},
												File:   "state_changes_test.flux",
												Source: "testing.load()",
												Start: ast.Position{
													Column: 20,
													Line:   32,
												},
											},
										},
										Callee: &ast.MemberExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 32,
														Line:   32,
													},
													File:   "state_changes_test.flux",
													Source: "testing.load",
													Start: ast.Position{
														Column: 20,
														Line:   32,
													},
												},
											},
											Object: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 27,
															Line:   32,
														},
														File:   "state_changes_test.flux",
														Source: "testing",
														Start: ast.Position{
															Column: 20,
															Line:   32,
														},
													},
												},
												Name: "testing",
											},
											Property: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 32,
															Line:   32,
														},
														File:   "state_changes_test.flux",
														Source: "load",
														Start: ast.Position{
															Column: 28,
															Line:   32,
														},
													},
												},
												Name: "load",
											},
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 15,
											Line:   33,
										},
										File:   "state_changes_test.flux",
										Source: "want: want",
										Start: ast.Position{
											Column: 5,
											Line:   33,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   33,
											},
											File:   "state_changes_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 5,
												Line:   33,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 15,
												Line:   33,
											},
											File:   "state_changes_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 11,
												Line:   33,
											},
										},
									},
									Name: "want",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 46,
											Line:   36,
										},
										File:   "state_changes_test.flux",
										Source: "fn: (tables=<-) => tables\n        |> events.stateChanges()\n        |> drop(columns: [\"_start\", \"_stop\"])",
										Start: ast.Position{
											Column: 5,
											Line:   34,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 7,
												Line:   34,
											},
											File:   "state_changes_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 5,
												Line:   34,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.FunctionExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 46,
												Line:   36,
											},
											File:   "state_changes_test.flux",
											Source: "(tables=<-) => tables\n        |> events.stateChanges()\n        |> drop(columns: [\"_start\", \"_stop\"])",
											Start: ast.Position{
												Column: 9,
												Line:   34,
											},
										},
									},
									Body: &ast.PipeExpression{
										Argument: &ast.PipeExpression{
											Argument: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 30,
															Line:   34,
														},
														File:   "state_changes_test.flux",
														Source: "tables",
														Start: ast.Position{
															Column: 24,
															Line:   34,
														},
													},
												},
												Name: "tables",
											},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 33,
														Line:   35,
													},
													File:   "state_changes_test.flux",
													Source: "tables\n        |> events.stateChanges()",
													Start: ast.Position{
														Column: 24,
														Line:   34,
													},
												},
											},
											Call: &ast.CallExpression{
												Arguments: nil,
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 33,
															Line:   35,
														},
														File:   "state_changes_test.flux",
														Source: "events.stateChanges()",
														Start: ast.Position{
															Column: 12,
															Line:   35,
														},
													},
												},
												Callee: &ast.MemberExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 31,
																Line:   35,
															},
															File:   "state_changes_test.flux",
															Source: "events.stateChanges",
															Start: ast.Position{
																Column: 12,
																Line:   35,
															},
														},
													},
													Object: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 18,
																	Line:   35,
																},
																File:   "state_changes_test.flux",
																Source: "events",
																Start: ast.Position{
																	Column: 12,
																	Line:   35,
																},
															},
														},
														Name: "events",
													},
													Property: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 31,
																	Line:   35,
																},
																File:   "state_changes_test.flux",
																Source: "stateChanges",
																Start: ast.Position{
																	Column: 19,
																	Line:   35,
																},
															},
														},
														Name: "stateChanges",
													},
												},
											},
										},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   36,
												},
												File:   "state_changes_test.flux",
												Source: "tables\n        |> events.stateChanges()\n        |> drop(columns: [\"_start\", \"_stop\"])",
												Start: ast.Position{
													Column: 24,
													Line:   34,
												},
											},
										},
										Call: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 45,
															Line:   36,
														},
														File:   "state_changes_test.flux",
														Source: "columns: [\"_start\", \"_stop\"]",
														Start: ast.Position{
															Column: 17,
															Line:   36,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 45,
																Line:   36,
															},
															File:   "state_changes_test.flux",
															Source: "columns: [\"_start\", \"_stop\"]",
															Start: ast.Position{
																Column: 17,
																Line:   36,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 24,
																	Line:   36,
																},
																File:   "state_changes_test.flux",
																Source: "columns",
																Start: ast.Position{
																	Column: 17,
																	Line:   36,
																},
															},
														},
														Name: "columns",
													},
													Value: &ast.ArrayExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 45,
																	Line:   36,
																},
																File:   "state_changes_test.flux",
																Source: "[\"_start\", \"_stop\"]",
																Start: ast.Position{
																	Column: 26,
																	Line:   36,
																},
															},
														},
														Elements: []ast.Expression{&ast.StringLiteral{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 35,
																		Line:   36,
																	},
																	File:   "state_changes_test.flux",
																	Source: "\"_start\"",
																	Start: ast.Position{
																		Column: 27,
																		Line:   36,
																	},
																},
															},
															Value: "_start",
														}, &ast.StringLiteral{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 44,
																		Line:   36,
																	},
																	File:   "state_changes_test.flux",
																	Source: "\"_stop\"",
																	Start: ast.Position{
																		Column: 37,
																		Line:   36,
																	},
																},
															},
															Value: "_stop",
														}},
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   36,
													},
													File:   "state_changes_test.flux",
													Source: "drop(columns: [\"_start\", \"_stop\"])",
													Start: ast.Position{
														Column: 12,
														Line:   36,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 16,
															Line:   36,
														},
														File:   "state_changes_test.flux",
														Source: "drop",
														Start: ast.Position{
															Column: 12,
															Line:   36,
														},
													},
												},
												Name: "drop",
											},
										},
									},
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   34,
												},
												File:   "state_changes_test.flux",
												Source: "tables=<-",
												Start: ast.Position{
													Column: 10,
													Line:   34,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 16,
														Line:   34,
													},
													File:   "state_changes_test.flux",
													Source: "tables",
													Start: ast.Position{
														Column: 10,
														Line:   34,
													},
												},
											},
											Name: "tables",
										},
										Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   34,
												},
												File:   "state_changes_test.flux",
												Source: "<-",
												Start: ast.Position{
													Column: 17,
													Line:   34,
												},
											},
										}},
									}},
								},
							}},
							With: nil,
						},
					},
					Params: []*ast.Property{},
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 3,
						Line:   37,
					},
					File:   "state_changes_test.flux",
					Source: "test stateChanges = () => ({\n    input: data |> testing.load(),\n    want: want,\n    fn: (tables=<-) => tables\n        |> events.stateChanges()\n        |> drop(columns: [\"_start\", \"_stop\"]),\n})",
					Start: ast.Position{
						Column: 1,
						Line:   31,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   4,
					},
					File:   "state_changes_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   4,
						},
						File:   "state_changes_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "testing",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 28,
						Line:   5,
					},
					File:   "state_changes_test.flux",
					Source: "import \"experimental/array\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 28,
							Line:   5,
						},
						File:   "state_changes_test.flux",
						Source: "\"experimental/array\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "experimental/array",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 16,
						Line:   6,
					},
					File:   "state_changes_test.flux",
					Source: "import \"events\"",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   6,
						},
						File:   "state_changes_test.flux",
						Source: "\"events\"",
						Start: ast.Position{
							Column: 8,
							Line:   6,
						},
					},
				},
				Value: "events",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "state_changes_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 20,
						Line:   1,
					},
					File:   "state_changes_test.flux",
					Source: "package events_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 20,
							Line:   1,
						},
						File:   "state_changes_test.flux",
						Source: "events_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "events_test",
			},
		},
	}},
	Package: "events_test",
	Path:    "events",
}}
