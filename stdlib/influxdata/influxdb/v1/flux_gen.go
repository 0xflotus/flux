// DO NOT EDIT: This file is autogenerated via the builtin command.

package v1

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 35,
					Line:   19,
				},
				File:   "v1.flux",
				Source: "package v1\n\nimport \"influxdata/influxdb/schema\"\n\n// Json parses an InfluxDB 1.x json result into a table stream.\nbuiltin json : (?json: string, ?file: string) => [A] where A: Record\n\n// Databases returns the list of available databases, it has no parameters.\nbuiltin databases : (?org: string, ?orgID: string, ?host: string, ?token: string) => [{organizationID: string , databaseName: string , retentionPolicy: string , retentionPeriod: int , default: bool , bucketID: string}]\n\n// Maintain backwards compatibility by mapping the functions into the schema package.\nfieldsAsCols = schema.fieldsAsCols\ntagValues = schema.tagValues\nmeasurementTagValues = schema.measurementTagValues\ntagKeys = schema.tagKeys\nmeasurementTagKeys = schema.measurementTagKeys\nfieldKeys = schema.fieldKeys\nmeasurementFieldKeys = schema.measurementFieldKeys\nmeasurements = schema.measurements",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   6,
					},
					File:   "v1.flux",
					Source: "builtin json",
					Start: ast.Position{
						Column: 1,
						Line:   6,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   6,
						},
						File:   "v1.flux",
						Source: "json",
						Start: ast.Position{
							Column: 9,
							Line:   6,
						},
					},
				},
				Name: "json",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 69,
							Line:   6,
						},
						File:   "v1.flux",
						Source: "(?json: string, ?file: string) => [A] where A: Record",
						Start: ast.Position{
							Column: 16,
							Line:   6,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{&ast.TypeConstraint{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 69,
								Line:   6,
							},
							File:   "v1.flux",
							Source: "A: Record",
							Start: ast.Position{
								Column: 60,
								Line:   6,
							},
						},
					},
					Kinds: []*ast.Identifier{&ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 69,
									Line:   6,
								},
								File:   "v1.flux",
								Source: "Record",
								Start: ast.Position{
									Column: 63,
									Line:   6,
								},
							},
						},
						Name: "Record",
					}},
					Tvar: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 61,
									Line:   6,
								},
								File:   "v1.flux",
								Source: "A",
								Start: ast.Position{
									Column: 60,
									Line:   6,
								},
							},
						},
						Name: "A",
					},
				}},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 53,
								Line:   6,
							},
							File:   "v1.flux",
							Source: "(?json: string, ?file: string) => [A]",
							Start: ast.Position{
								Column: 16,
								Line:   6,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 30,
									Line:   6,
								},
								File:   "v1.flux",
								Source: "?json: string",
								Start: ast.Position{
									Column: 17,
									Line:   6,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 22,
										Line:   6,
									},
									File:   "v1.flux",
									Source: "json",
									Start: ast.Position{
										Column: 18,
										Line:   6,
									},
								},
							},
							Name: "json",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 30,
										Line:   6,
									},
									File:   "v1.flux",
									Source: "string",
									Start: ast.Position{
										Column: 24,
										Line:   6,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   6,
										},
										File:   "v1.flux",
										Source: "string",
										Start: ast.Position{
											Column: 24,
											Line:   6,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 45,
									Line:   6,
								},
								File:   "v1.flux",
								Source: "?file: string",
								Start: ast.Position{
									Column: 32,
									Line:   6,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 37,
										Line:   6,
									},
									File:   "v1.flux",
									Source: "file",
									Start: ast.Position{
										Column: 33,
										Line:   6,
									},
								},
							},
							Name: "file",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   6,
									},
									File:   "v1.flux",
									Source: "string",
									Start: ast.Position{
										Column: 39,
										Line:   6,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 45,
											Line:   6,
										},
										File:   "v1.flux",
										Source: "string",
										Start: ast.Position{
											Column: 39,
											Line:   6,
										},
									},
								},
								Name: "string",
							},
						},
					}},
					Return: &ast.ArrayType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 53,
									Line:   6,
								},
								File:   "v1.flux",
								Source: "[A]",
								Start: ast.Position{
									Column: 50,
									Line:   6,
								},
							},
						},
						ElementType: &ast.TvarType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 52,
										Line:   6,
									},
									File:   "v1.flux",
									Source: "A",
									Start: ast.Position{
										Column: 51,
										Line:   6,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 52,
											Line:   6,
										},
										File:   "v1.flux",
										Source: "A",
										Start: ast.Position{
											Column: 51,
											Line:   6,
										},
									},
								},
								Name: "A",
							},
						},
					},
				},
			},
		}, &ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 18,
						Line:   9,
					},
					File:   "v1.flux",
					Source: "builtin databases",
					Start: ast.Position{
						Column: 1,
						Line:   9,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 18,
							Line:   9,
						},
						File:   "v1.flux",
						Source: "databases",
						Start: ast.Position{
							Column: 9,
							Line:   9,
						},
					},
				},
				Name: "databases",
			},
			Ty: ast.TypeExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 219,
							Line:   9,
						},
						File:   "v1.flux",
						Source: "(?org: string, ?orgID: string, ?host: string, ?token: string) => [{organizationID: string , databaseName: string , retentionPolicy: string , retentionPeriod: int , default: bool , bucketID: string}]",
						Start: ast.Position{
							Column: 21,
							Line:   9,
						},
					},
				},
				Constraints: []*ast.TypeConstraint{},
				Ty: &ast.FunctionType{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 219,
								Line:   9,
							},
							File:   "v1.flux",
							Source: "(?org: string, ?orgID: string, ?host: string, ?token: string) => [{organizationID: string , databaseName: string , retentionPolicy: string , retentionPeriod: int , default: bool , bucketID: string}]",
							Start: ast.Position{
								Column: 21,
								Line:   9,
							},
						},
					},
					Parameters: []*ast.ParameterType{&ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   9,
								},
								File:   "v1.flux",
								Source: "?org: string",
								Start: ast.Position{
									Column: 22,
									Line:   9,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 26,
										Line:   9,
									},
									File:   "v1.flux",
									Source: "org",
									Start: ast.Position{
										Column: 23,
										Line:   9,
									},
								},
							},
							Name: "org",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 34,
										Line:   9,
									},
									File:   "v1.flux",
									Source: "string",
									Start: ast.Position{
										Column: 28,
										Line:   9,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 34,
											Line:   9,
										},
										File:   "v1.flux",
										Source: "string",
										Start: ast.Position{
											Column: 28,
											Line:   9,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 50,
									Line:   9,
								},
								File:   "v1.flux",
								Source: "?orgID: string",
								Start: ast.Position{
									Column: 36,
									Line:   9,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   9,
									},
									File:   "v1.flux",
									Source: "orgID",
									Start: ast.Position{
										Column: 37,
										Line:   9,
									},
								},
							},
							Name: "orgID",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 50,
										Line:   9,
									},
									File:   "v1.flux",
									Source: "string",
									Start: ast.Position{
										Column: 44,
										Line:   9,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 50,
											Line:   9,
										},
										File:   "v1.flux",
										Source: "string",
										Start: ast.Position{
											Column: 44,
											Line:   9,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 65,
									Line:   9,
								},
								File:   "v1.flux",
								Source: "?host: string",
								Start: ast.Position{
									Column: 52,
									Line:   9,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 57,
										Line:   9,
									},
									File:   "v1.flux",
									Source: "host",
									Start: ast.Position{
										Column: 53,
										Line:   9,
									},
								},
							},
							Name: "host",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 65,
										Line:   9,
									},
									File:   "v1.flux",
									Source: "string",
									Start: ast.Position{
										Column: 59,
										Line:   9,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 65,
											Line:   9,
										},
										File:   "v1.flux",
										Source: "string",
										Start: ast.Position{
											Column: 59,
											Line:   9,
										},
									},
								},
								Name: "string",
							},
						},
					}, &ast.ParameterType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 81,
									Line:   9,
								},
								File:   "v1.flux",
								Source: "?token: string",
								Start: ast.Position{
									Column: 67,
									Line:   9,
								},
							},
						},
						Kind: "Optional",
						Name: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 73,
										Line:   9,
									},
									File:   "v1.flux",
									Source: "token",
									Start: ast.Position{
										Column: 68,
										Line:   9,
									},
								},
							},
							Name: "token",
						},
						Ty: &ast.NamedType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 81,
										Line:   9,
									},
									File:   "v1.flux",
									Source: "string",
									Start: ast.Position{
										Column: 75,
										Line:   9,
									},
								},
							},
							ID: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 81,
											Line:   9,
										},
										File:   "v1.flux",
										Source: "string",
										Start: ast.Position{
											Column: 75,
											Line:   9,
										},
									},
								},
								Name: "string",
							},
						},
					}},
					Return: &ast.ArrayType{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 219,
									Line:   9,
								},
								File:   "v1.flux",
								Source: "[{organizationID: string , databaseName: string , retentionPolicy: string , retentionPeriod: int , default: bool , bucketID: string}]",
								Start: ast.Position{
									Column: 86,
									Line:   9,
								},
							},
						},
						ElementType: &ast.RecordType{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 218,
										Line:   9,
									},
									File:   "v1.flux",
									Source: "{organizationID: string , databaseName: string , retentionPolicy: string , retentionPeriod: int , default: bool , bucketID: string}",
									Start: ast.Position{
										Column: 87,
										Line:   9,
									},
								},
							},
							Properties: []*ast.PropertyType{&ast.PropertyType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 110,
											Line:   9,
										},
										File:   "v1.flux",
										Source: "organizationID: string",
										Start: ast.Position{
											Column: 88,
											Line:   9,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 102,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "organizationID",
											Start: ast.Position{
												Column: 88,
												Line:   9,
											},
										},
									},
									Name: "organizationID",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 110,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "string",
											Start: ast.Position{
												Column: 104,
												Line:   9,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 110,
													Line:   9,
												},
												File:   "v1.flux",
												Source: "string",
												Start: ast.Position{
													Column: 104,
													Line:   9,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 133,
											Line:   9,
										},
										File:   "v1.flux",
										Source: "databaseName: string",
										Start: ast.Position{
											Column: 113,
											Line:   9,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 125,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "databaseName",
											Start: ast.Position{
												Column: 113,
												Line:   9,
											},
										},
									},
									Name: "databaseName",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 133,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "string",
											Start: ast.Position{
												Column: 127,
												Line:   9,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 133,
													Line:   9,
												},
												File:   "v1.flux",
												Source: "string",
												Start: ast.Position{
													Column: 127,
													Line:   9,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 159,
											Line:   9,
										},
										File:   "v1.flux",
										Source: "retentionPolicy: string",
										Start: ast.Position{
											Column: 136,
											Line:   9,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 151,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "retentionPolicy",
											Start: ast.Position{
												Column: 136,
												Line:   9,
											},
										},
									},
									Name: "retentionPolicy",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 159,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "string",
											Start: ast.Position{
												Column: 153,
												Line:   9,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 159,
													Line:   9,
												},
												File:   "v1.flux",
												Source: "string",
												Start: ast.Position{
													Column: 153,
													Line:   9,
												},
											},
										},
										Name: "string",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 182,
											Line:   9,
										},
										File:   "v1.flux",
										Source: "retentionPeriod: int",
										Start: ast.Position{
											Column: 162,
											Line:   9,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 177,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "retentionPeriod",
											Start: ast.Position{
												Column: 162,
												Line:   9,
											},
										},
									},
									Name: "retentionPeriod",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 182,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "int",
											Start: ast.Position{
												Column: 179,
												Line:   9,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 182,
													Line:   9,
												},
												File:   "v1.flux",
												Source: "int",
												Start: ast.Position{
													Column: 179,
													Line:   9,
												},
											},
										},
										Name: "int",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 198,
											Line:   9,
										},
										File:   "v1.flux",
										Source: "default: bool",
										Start: ast.Position{
											Column: 185,
											Line:   9,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 192,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "default",
											Start: ast.Position{
												Column: 185,
												Line:   9,
											},
										},
									},
									Name: "default",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 198,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "bool",
											Start: ast.Position{
												Column: 194,
												Line:   9,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 198,
													Line:   9,
												},
												File:   "v1.flux",
												Source: "bool",
												Start: ast.Position{
													Column: 194,
													Line:   9,
												},
											},
										},
										Name: "bool",
									},
								},
							}, &ast.PropertyType{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 217,
											Line:   9,
										},
										File:   "v1.flux",
										Source: "bucketID: string",
										Start: ast.Position{
											Column: 201,
											Line:   9,
										},
									},
								},
								Name: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 209,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "bucketID",
											Start: ast.Position{
												Column: 201,
												Line:   9,
											},
										},
									},
									Name: "bucketID",
								},
								Ty: &ast.NamedType{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 217,
												Line:   9,
											},
											File:   "v1.flux",
											Source: "string",
											Start: ast.Position{
												Column: 211,
												Line:   9,
											},
										},
									},
									ID: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 217,
													Line:   9,
												},
												File:   "v1.flux",
												Source: "string",
												Start: ast.Position{
													Column: 211,
													Line:   9,
												},
											},
										},
										Name: "string",
									},
								},
							}},
							Tvar: nil,
						},
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 35,
						Line:   12,
					},
					File:   "v1.flux",
					Source: "fieldsAsCols = schema.fieldsAsCols",
					Start: ast.Position{
						Column: 1,
						Line:   12,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   12,
						},
						File:   "v1.flux",
						Source: "fieldsAsCols",
						Start: ast.Position{
							Column: 1,
							Line:   12,
						},
					},
				},
				Name: "fieldsAsCols",
			},
			Init: &ast.MemberExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   12,
						},
						File:   "v1.flux",
						Source: "schema.fieldsAsCols",
						Start: ast.Position{
							Column: 16,
							Line:   12,
						},
					},
				},
				Object: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 22,
								Line:   12,
							},
							File:   "v1.flux",
							Source: "schema",
							Start: ast.Position{
								Column: 16,
								Line:   12,
							},
						},
					},
					Name: "schema",
				},
				Property: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   12,
							},
							File:   "v1.flux",
							Source: "fieldsAsCols",
							Start: ast.Position{
								Column: 23,
								Line:   12,
							},
						},
					},
					Name: "fieldsAsCols",
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 29,
						Line:   13,
					},
					File:   "v1.flux",
					Source: "tagValues = schema.tagValues",
					Start: ast.Position{
						Column: 1,
						Line:   13,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 10,
							Line:   13,
						},
						File:   "v1.flux",
						Source: "tagValues",
						Start: ast.Position{
							Column: 1,
							Line:   13,
						},
					},
				},
				Name: "tagValues",
			},
			Init: &ast.MemberExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 29,
							Line:   13,
						},
						File:   "v1.flux",
						Source: "schema.tagValues",
						Start: ast.Position{
							Column: 13,
							Line:   13,
						},
					},
				},
				Object: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   13,
							},
							File:   "v1.flux",
							Source: "schema",
							Start: ast.Position{
								Column: 13,
								Line:   13,
							},
						},
					},
					Name: "schema",
				},
				Property: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 29,
								Line:   13,
							},
							File:   "v1.flux",
							Source: "tagValues",
							Start: ast.Position{
								Column: 20,
								Line:   13,
							},
						},
					},
					Name: "tagValues",
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 51,
						Line:   14,
					},
					File:   "v1.flux",
					Source: "measurementTagValues = schema.measurementTagValues",
					Start: ast.Position{
						Column: 1,
						Line:   14,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 21,
							Line:   14,
						},
						File:   "v1.flux",
						Source: "measurementTagValues",
						Start: ast.Position{
							Column: 1,
							Line:   14,
						},
					},
				},
				Name: "measurementTagValues",
			},
			Init: &ast.MemberExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 51,
							Line:   14,
						},
						File:   "v1.flux",
						Source: "schema.measurementTagValues",
						Start: ast.Position{
							Column: 24,
							Line:   14,
						},
					},
				},
				Object: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 30,
								Line:   14,
							},
							File:   "v1.flux",
							Source: "schema",
							Start: ast.Position{
								Column: 24,
								Line:   14,
							},
						},
					},
					Name: "schema",
				},
				Property: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 51,
								Line:   14,
							},
							File:   "v1.flux",
							Source: "measurementTagValues",
							Start: ast.Position{
								Column: 31,
								Line:   14,
							},
						},
					},
					Name: "measurementTagValues",
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 25,
						Line:   15,
					},
					File:   "v1.flux",
					Source: "tagKeys = schema.tagKeys",
					Start: ast.Position{
						Column: 1,
						Line:   15,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 8,
							Line:   15,
						},
						File:   "v1.flux",
						Source: "tagKeys",
						Start: ast.Position{
							Column: 1,
							Line:   15,
						},
					},
				},
				Name: "tagKeys",
			},
			Init: &ast.MemberExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 25,
							Line:   15,
						},
						File:   "v1.flux",
						Source: "schema.tagKeys",
						Start: ast.Position{
							Column: 11,
							Line:   15,
						},
					},
				},
				Object: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 17,
								Line:   15,
							},
							File:   "v1.flux",
							Source: "schema",
							Start: ast.Position{
								Column: 11,
								Line:   15,
							},
						},
					},
					Name: "schema",
				},
				Property: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 25,
								Line:   15,
							},
							File:   "v1.flux",
							Source: "tagKeys",
							Start: ast.Position{
								Column: 18,
								Line:   15,
							},
						},
					},
					Name: "tagKeys",
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 47,
						Line:   16,
					},
					File:   "v1.flux",
					Source: "measurementTagKeys = schema.measurementTagKeys",
					Start: ast.Position{
						Column: 1,
						Line:   16,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   16,
						},
						File:   "v1.flux",
						Source: "measurementTagKeys",
						Start: ast.Position{
							Column: 1,
							Line:   16,
						},
					},
				},
				Name: "measurementTagKeys",
			},
			Init: &ast.MemberExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 47,
							Line:   16,
						},
						File:   "v1.flux",
						Source: "schema.measurementTagKeys",
						Start: ast.Position{
							Column: 22,
							Line:   16,
						},
					},
				},
				Object: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 28,
								Line:   16,
							},
							File:   "v1.flux",
							Source: "schema",
							Start: ast.Position{
								Column: 22,
								Line:   16,
							},
						},
					},
					Name: "schema",
				},
				Property: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 47,
								Line:   16,
							},
							File:   "v1.flux",
							Source: "measurementTagKeys",
							Start: ast.Position{
								Column: 29,
								Line:   16,
							},
						},
					},
					Name: "measurementTagKeys",
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 29,
						Line:   17,
					},
					File:   "v1.flux",
					Source: "fieldKeys = schema.fieldKeys",
					Start: ast.Position{
						Column: 1,
						Line:   17,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 10,
							Line:   17,
						},
						File:   "v1.flux",
						Source: "fieldKeys",
						Start: ast.Position{
							Column: 1,
							Line:   17,
						},
					},
				},
				Name: "fieldKeys",
			},
			Init: &ast.MemberExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 29,
							Line:   17,
						},
						File:   "v1.flux",
						Source: "schema.fieldKeys",
						Start: ast.Position{
							Column: 13,
							Line:   17,
						},
					},
				},
				Object: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 19,
								Line:   17,
							},
							File:   "v1.flux",
							Source: "schema",
							Start: ast.Position{
								Column: 13,
								Line:   17,
							},
						},
					},
					Name: "schema",
				},
				Property: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 29,
								Line:   17,
							},
							File:   "v1.flux",
							Source: "fieldKeys",
							Start: ast.Position{
								Column: 20,
								Line:   17,
							},
						},
					},
					Name: "fieldKeys",
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 51,
						Line:   18,
					},
					File:   "v1.flux",
					Source: "measurementFieldKeys = schema.measurementFieldKeys",
					Start: ast.Position{
						Column: 1,
						Line:   18,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 21,
							Line:   18,
						},
						File:   "v1.flux",
						Source: "measurementFieldKeys",
						Start: ast.Position{
							Column: 1,
							Line:   18,
						},
					},
				},
				Name: "measurementFieldKeys",
			},
			Init: &ast.MemberExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 51,
							Line:   18,
						},
						File:   "v1.flux",
						Source: "schema.measurementFieldKeys",
						Start: ast.Position{
							Column: 24,
							Line:   18,
						},
					},
				},
				Object: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 30,
								Line:   18,
							},
							File:   "v1.flux",
							Source: "schema",
							Start: ast.Position{
								Column: 24,
								Line:   18,
							},
						},
					},
					Name: "schema",
				},
				Property: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 51,
								Line:   18,
							},
							File:   "v1.flux",
							Source: "measurementFieldKeys",
							Start: ast.Position{
								Column: 31,
								Line:   18,
							},
						},
					},
					Name: "measurementFieldKeys",
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 35,
						Line:   19,
					},
					File:   "v1.flux",
					Source: "measurements = schema.measurements",
					Start: ast.Position{
						Column: 1,
						Line:   19,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   19,
						},
						File:   "v1.flux",
						Source: "measurements",
						Start: ast.Position{
							Column: 1,
							Line:   19,
						},
					},
				},
				Name: "measurements",
			},
			Init: &ast.MemberExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 35,
							Line:   19,
						},
						File:   "v1.flux",
						Source: "schema.measurements",
						Start: ast.Position{
							Column: 16,
							Line:   19,
						},
					},
				},
				Object: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 22,
								Line:   19,
							},
							File:   "v1.flux",
							Source: "schema",
							Start: ast.Position{
								Column: 16,
								Line:   19,
							},
						},
					},
					Name: "schema",
				},
				Property: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 35,
								Line:   19,
							},
							File:   "v1.flux",
							Source: "measurements",
							Start: ast.Position{
								Column: 23,
								Line:   19,
							},
						},
					},
					Name: "measurements",
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 36,
						Line:   3,
					},
					File:   "v1.flux",
					Source: "import \"influxdata/influxdb/schema\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 36,
							Line:   3,
						},
						File:   "v1.flux",
						Source: "\"influxdata/influxdb/schema\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "influxdata/influxdb/schema",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "v1.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 11,
						Line:   1,
					},
					File:   "v1.flux",
					Source: "package v1",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 11,
							Line:   1,
						},
						File:   "v1.flux",
						Source: "v1",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "v1",
			},
		},
	}},
	Package: "v1",
	Path:    "influxdata/influxdb/v1",
}
